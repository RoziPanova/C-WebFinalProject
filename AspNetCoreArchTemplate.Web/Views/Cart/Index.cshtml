@using AspNetCoreArchTemplate.Web.ViewModels.Cart
@using static AspNetCoreArchTemplate.GCommon.ApplicationConstants;
@model IEnumerable<CartIndexViewModel>
@{
    ViewData["Title"] = "Your Cart";
}

<h2>Your Cart</h2>

@if (!Model.Any())
{
    <div class="alert alert-info">Your cart is empty.</div>
}
else
{
    <div class="table-responsive">
        <table class="table table-bordered align-middle">
            <thead class="table-light">
                <tr>
                    <th>Image</th>
                    <th>Product</th>
                    <th>Type</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Total</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (CartIndexViewModel item in Model)
                {
                    <tr>
                        <td style="width: 100px;">
                            <img src="@item.ProductImageUrl" alt="@item.ProductName" class="img-fluid" style="max-height: 80px;" />
                        </td>
                        <td>@item.ProductName</td>
                        <td>@item.ProductType</td>
                        <td>
                            <form asp-controller="Cart" asp-action="DecreaseQuantity" method="post" class="d-inline">
                                <input type="hidden" name="productId" value="@item.ProductId" />
                                <button class="btn btn-sm btn-outline-secondary">-</button>
                            </form>

                            <span class="mx-2">@item.Quantity</span>

                            <form asp-controller="Cart" asp-action="IncreaseQuantity" method="post" class="d-inline">
                                <input type="hidden" name="productId" value="@item.ProductId" />
                                <button class="btn btn-sm btn-outline-secondary">+</button>
                            </form>
                        </td>
                        <td>@item.Price.ToString(PriceFormat)</td>
                        <td>@String.Format(PriceFormat, (item.Quantity * item.Price))</td>
                        <td>
                            <form method="post" asp-controller="Cart" asp-action="Remove">
                                <input type="hidden" name="productId" value="@item.ProductId" />
                                <button class="btn btn-sm btn-outline-danger">Remove</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-between align-items-center mt-4">
        <h4>Total for Cart:</h4>
        <h4 class="text-success fw-bold">@Model.Sum(x => x.Quantity * x.Price).ToString(PriceFormat)</h4>
    </div>

    <form method="post" asp-controller="Cart" asp-action="Checkout" class="mt-3 text-end">
        <button class="btn btn-primary btn-lg">Checkout</button>
    </form>
}
